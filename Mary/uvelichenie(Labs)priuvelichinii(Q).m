clear, clc;
M = 4; % количество элементов решетки (номер элемента)
N = 16; % количество выборок (номер выборки)
Q = 10000; % количество экспериментов
r = 1000; % количество отрезков для разбиения (см. hist)
p_osh = 10.^(-4); % вероятность ошибки 
% (задается точность определения отношения правдоподобия L_abs)
period = 100; % период, через который берется число экспериментов 
% для вычисления среднего значения порогового отношения правдоподобия

L = zeros (Q, 1); % вектор-столбец статистики
L_abs = zeros (Q, 1); % вектор-столбец модуля статистики
B_sort = zeros (Q, 1); % вектор-столбец теоретических значений CDF
% вектор-столбец выборочных пороговых значений статистик
L_pr_choose = zeros (Q, 1); 

for u = 1:period:Q
    s = u;
    for q = 1:1:s
        A = zeros (M, M);
        for n = 1:1:N
            x = randn(M, 1);
            y = randn(M, 1);
            z = x+i*y; % комплексный гауссовый шум для каждой выборки(вектор-столбец)
            Z_tr = z'; % транспонированный вектор z (вектор-строка)
            P = z*Z_tr; % произведение вектора-столбца на вектор-строку
            % результат - матрица M x M
            A = A + P; % матрица А (результат сложения всех произведений Р)
            % результат - матрица M x M
        end

        % рассчет ковариационной матрицы
        B = A ./ N;

        % считаем числитель Ch для GLR-статистики
        D = det(A); % вычисляем детерминант матрицы А
        Ch = D.^N;
        % считаем знаменатель для GLR-статистики
        Pm = 1;
        for i = 1:1:M
            Pm = Pm .* ((A(i,i)).^N);
        end
        % вычисляем GLR-статистику
        GLR = Ch ./ Pm;
        % создаем вектор статистики для Q экспериментов
        L (q,1) = GLR;
        % вычисляем и рассматриваем распределение модуля статистики
        GLR_abs = abs(GLR);
        L_abs (q,1) = GLR_abs;    
    end

    % минимальное значение вектора L_abs
    MIN = min(L_abs(:));
    % максимальное значение вектора L_abs
    MAX = max(L_abs(:));
    D = MAX - MIN; % интервал значений L_abs 
    R = D./r; % длина отрезка в hist

    % практический расчет ФПВ и интегральной ФПВ
    t = 1:1:s;
    [m t] = hist(L_abs,r);
    w = m/(s*(t(2)-t(1))); % ФПВ
    f = cumsum(m/s); % интегральная ФПВ

    % задаем порог (вероятность правильного определения)
    pr = 1 - p_osh; 
    % значение ошибки (ппогрешности определения порога)
    e = 0.00001;

    % вектор-столбец разницы вектора CDF, определенной практическим способом,
    % и порогового значения плотности вероятности = 0.99
    f_d = abs(f - pr);
    % поиск минимального значения вектора разницы и его индекса f_d_min_index
    [f_d_min, f_d_min_index] = min(f_d);
    % пороговое значение отношения правдоподобия для значения CDF = 0.99
    L_abs_porog = t (f_d_min_index);
    % создаем вектор пороговых занчений отношения правдоподобия 
    L_pr_choose(u,1) = L_abs_porog;
end

% считаем среднее значение отношения правдоподобия 
L_pr_choose_summa = 0;
for u = 1:period:Q
L_pr_choose_summa = L_pr_choose_summa + L_pr_choose(u,1);
end
L_pr_choose_m = L_pr_choose_summa / period;
disp(L_pr_choose_m);

% построение вектора значений пороговых значений отношения правдоподобия 
% в зависимости от количества экспериментов
v = 1:1:Q;
figure
plot(v, L_pr_choose);
xlabel ('количество экспериментов');
ylabel ('значение порогового отношения правдоподобия');
title ('Увеличение порогового отношения правдоподобия при увеличении числа экспериментов');
grid on;